#define MONSTER_ACTORNAME 0
#define MONSTER_DIFFICULTY 1
#define MONSTER_SCRIPT 2
#define MONSTER_EVADESPEED 3
#define MONSTER_FLAGS 4
#define MONSTER_NAME 5
#define MONSTER_SPRITE 6
#define NUM_MONSTER_PROPERTIES 7

#define MONSTF_FLYING 1
#define MONSTF_BOSS 2

int NumMonsterTypes = 0;
#define MAX_MONSTER_TYPES 100
int MonsterTypes[MAX_MONSTER_TYPES][NUM_MONSTER_PROPERTIES];

function void AddMonster(int difficulty, str sprite, str actorname, str name)
{
	MonsterTypes[NumMonsterTypes][MONSTER_ACTORNAME] = actorname;
	MonsterTypes[NumMonsterTypes][MONSTER_DIFFICULTY] = difficulty;
	MonsterTypes[NumMonsterTypes][MONSTER_SCRIPT] = 0;
	MonsterTypes[NumMonsterTypes][MONSTER_EVADESPEED] = 0;
	MonsterTypes[NumMonsterTypes][MONSTER_FLAGS] = 0;
	MonsterTypes[NumMonsterTypes][MONSTER_NAME] = name;
	MonsterTypes[NumMonsterTypes][MONSTER_SPRITE] = sprite;
	NumMonsterTypes++;
}

function void AddSpawnedMonster(str sprite, str actorname, str name)
{
	AddMonster(0, sprite, actorname, name);
}

function void FlyingMonster(void)
{
	MonsterTypes[NumMonsterTypes - 1][MONSTER_FLAGS] |= MONSTF_FLYING;
}

function void BossMonster(void)
{
	MonsterTypes[NumMonsterTypes - 1][MONSTER_FLAGS] |= MONSTF_BOSS;
}

function void EvadingMonster(int speed)
{
	MonsterTypes[NumMonsterTypes - 1][MONSTER_EVADESPEED] = speed;
}

function void InitMonsters(void)
{
	AddMonster(0.055, "POSSA1",   "Zombieman2", "Zombieman");
	
	AddMonster(0.075, "SPOSA1",   "Shotgunguy2", "Shotgun Zombie");
	AddMonster(0.1,   "ESPSA1",   "EliteShotgunGuy", "Elite Shotgun Zombie");
	
	AddMonster(0.09,  "CPOSA1",   "Chaingunguy2", "Zombie Commando");
	
	AddMonster(0.03,  "TROOA1",   "Imp2", "Imp");
	AddMonster(0.065, "DRKVA1",   "DarkImp", "Dark Imp");
	
	AddMonster(0.045, "SARGA1",   "Pinky", "Demon");
	AddMonster(0.0475,"SPTRA1",   "Spectre2", "Spectre");
	AddMonster(0.1,   "SKULA1",   "LostSoul2", "Lost Soul"); FlyingMonster();
	AddMonster(0.25,  "HEADA1",   "Cacodemon2", "Cacodemon"); FlyingMonster();
	AddMonster(0.25,  "PAINA1",   "PainElemental2", "Pain Elemental"); FlyingMonster();
	AddMonster(0.25,  "BOS2A1C1", "HellKnight2", "Hell Knight");
	AddMonster(0.35,  "BOSSA1",   "BaronofHell2", "Baron of Hell");
	AddMonster(0.3,   "SKELA1D1", "Revenant2", "Revenant");
	AddMonster(0.3,   "FATTA1",   "Mancubus", "Mancubus");
	AddMonster(0.325, "BSPIA1D1", "Arachnotron2", "Arachnotron");
	AddMonster(0.75,  "VILEA1D1", "Archvile2", "Arch-Vile");
	AddMonster(6.5,   "SPIDA1D1", "Spidermastermind2", "Spider Mastermind");
	AddMonster(7.25,  "CYBRA1",   "Cyberdemon2", "Cyberdemon");
	AddMonster(0.075, "SSWVA1",   "WolfensteinSS2", "Wolfenstein SS");
	
	AddMonster(0.01,  "BAR1A0",   "NewExplosiveBarrel", "Explosive Barrel");
}

script mop_count_monstertypes_sv OPEN
{
	InitMonsters();
	//CountMonsterTypes();
}
script mop_count_monstertypes_cl OPEN CLIENTSIDE
{
	InitMonsters();
	//CountMonsterTypes();
}

// List of items that monsters can carry.
#define NUM_MONSTER_ITEMS 7
int MonsterItems[NUM_MONSTER_ITEMS] =
{
	"SSGZombieToken",
	"QSGZombieToken",
	"DukeToken",
	"FamineMeleeToken",
	"FamineDeathToken",
	"SentientToken",
	"CardinalToken"
};

script mop_phaseimp (void)
{
	//printbold(s:"start");

	if (CheckInventory("PhaseImp_Phased"))
		terminate;
		
	//printbold(s:"phase");

	GiveInventory("PhaseImp_Phased", 1);
	GiveInventory("PhaseImp_Phase", 1);
	
	for (int i = 0; i < 175; i++)
	{
		if (GetPlayerInput(-1, INPUT_BUTTONS) & BT_ATTACK)
			break;
			
		Delay(1);
	}
	
	//printbold(s:"unphase");
	
	GiveInventory("PhaseImp_Unphase", 1);
	
	Delay(175);
	
	//printbold(s:"cooldown");
	
	TakeInventory("PhaseImp_Phased", 1);
}

script mop_stopvile (void)
{
	SetActorVelocity(0, 0, 0, GetActorVelZ(0), false, true);
}

function int IdentifyMonsterType(int tid)
{
	for (int i = 0; i < NumMonsterTypes; i++)
		if (ThingCountName(MonsterTypes[i][MONSTER_ACTORNAME], tid))
			return i;
			
	return -1;
}

function int IdentifyPossessedMonsterType(int player)
{
	for (int i = 0; i < NumMonsterTypes; i++)
		if (ThingCountName(StrParam(s:"Possessed", s:MonsterTypes[i][MONSTER_ACTORNAME]), 1000 + player))
			return i;

	return -1;
}
